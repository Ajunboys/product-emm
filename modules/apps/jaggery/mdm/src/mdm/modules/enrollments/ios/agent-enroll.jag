<%
/*
 * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

var log = new Log("/modules/enrollments/ios/agent-enroll.jag");

var mdmProps = require('/config/mdm-props.js').config();
var UAParser = require("/modules/ua-parser.min.js")["UAParser"];
var serviceInvokers = require("/modules/backend-service-invoker.js").backendServiceInvoker;

var parser = new UAParser();
var userAgent = request.getHeader("User-Agent");
parser.setUA(userAgent);
parser.getResult();
var os = parser.getOS();
var platform = os.name;

if (platform != "iOS") {
    response.sendRedirect(mdmProps["appContext"] + "enrollments/error/unintentional-request");
} else if (session.get("lastAccessedPage") != "license-agent") {
    response.sendRedirect(mdmProps["appContext"] + "enrollments/error/unintentional-request");
} else {
    var authenticatedUser = session.get("authenticatedUser");
    if (!authenticatedUser) {
        response.sendRedirect(mdmProps["appContext"] + "enrollments/error/unintentional-request");
    } else {
        var ByteArrayInputStream = Packages.java.io.ByteArrayInputStream;

        var enrollUrl = mdmProps["iOSConfigRoot"] + "enroll";
        var username = authenticatedUser;
        var password = session.get("authenticatedUserPassword");
        var challengeToken = session.get("iOSChallengeToken");
        var inputs = {"username": username, "password": password, "challengeToken": challengeToken};
        serviceInvokers.HttpClient.post(enrollUrl,inputs,function (stream) {
            session.put("enrolledUser", authenticatedUser);
            var byteArrayInputStream = new ByteArrayInputStream(stream);
            response.contentType = "application/x-apple-aspen-config";
            print(new Stream(byteArrayInputStream));
        }, function (stream) {
            response.sendRedirect(mdmProps["appContext"] + "enrollments/ios/login-agent?error=unexpected");
        });
    }
}
%>