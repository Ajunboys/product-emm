<%
/*
 * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

var log = new Log("/modules/enrollments/ios/certificate.jag");

var mdmProps = require('/config/mdm-props.js').config();
var UAParser = require("/modules/ua-parser.min.js")["UAParser"];

var parser = new UAParser();
var userAgent = request.getHeader("User-Agent");
parser.setUA(userAgent);
parser.getResult();
var os = parser.getOS();
var platform = os.name;

if (platform != "iOS") {
    response.sendRedirect(mdmProps["appContext"] + "enrollments/error/unintentional-request");
} else if (session.get("lastAccessedPage") != "download-agent") {
    response.sendRedirect(mdmProps["appContext"] + "enrollments/error/unintentional-request");
} else {
    var HttpClient = Packages.org.apache.commons.httpclient.HttpClient;
    var GetMethod = Packages.org.apache.commons.httpclient.methods.GetMethod;
    var ByteArrayInputStream = Packages.java.io.ByteArrayInputStream;

    var caURL = mdmProps["iOSConfigRoot"] + 'ca';
    var method = new GetMethod(caURL);
    var client = new HttpClient();
    try {
        client.executeMethod(method);
        var status = method.getStatusCode();
        if (status == 200) {
            var stream = method.getResponseBody();
            response.contentType = "application/x-x509-ca-cert";
            var byteArrayInputStream = new ByteArrayInputStream(stream);
            print(new Stream(byteArrayInputStream));
        } else {
            response.sendRedirect("/error-page");
        }
    } catch (e) {
        log.error("Error occurred when downloading emm certificate", e);
        response.sendRedirect("/error-page");
    } finally {
        method.releaseConnection();
    }
}
%>