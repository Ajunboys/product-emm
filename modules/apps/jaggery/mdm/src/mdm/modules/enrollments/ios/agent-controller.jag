<%
/*
 * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

var log = new Log("/modules/enrollments/ios/agent-controller.jag");

var mdmProps = require('/config/mdm-props.js').config();
var UAParser = require("/modules/ua-parser.min.js")["UAParser"];

var parser = new UAParser();
var userAgent = request.getHeader("User-Agent");
parser.setUA(userAgent);
parser.getResult();
var os = parser.getOS();
var platform = os.name;

if (platform != "iOS") {
    response.sendRedirect(mdmProps["appContext"] + "enrollments/unintentional-request");
} else {
    var username = request.getParameter("username");
    var password = request.getParameter("password");
    var ownership = request.getParameter("ownership");

    var xhr = new XMLHttpRequest();
    var authUrl = mdmProps["iOSConfigRoot"] + "authenticate";
    xhr.open("POST", authUrl);
    xhr.setRequestHeader("Content-Type", "application/json");
    xhr.send(stringify({"username": username, "password": password, "ownership": ownership}));

    if (xhr.status == 200 && xhr.readyState == 4) {
        var responseContent = parse(xhr.responseText);

        session.put("iOSChallengeToken", responseContent["challengeToken"]);
        session.put("username", username);
        session.put("password", password);
        session.put("ownership", ownership);

        response.sendRedirect(mdmProps["appContext"] + "enrollments/ios/license-agent");
    } else if (xhr.status == 403) {
        response.sendRedirect(mdmProps["appContext"] + "enrollments/ios/login-agent#auth-failed");
    } else {
        response.sendRedirect(mdmProps["appContext"] + "enrollments/ios/login-agent#error");
    }
}
%>