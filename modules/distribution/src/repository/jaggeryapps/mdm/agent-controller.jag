<%
// Call the iOS end point with the Username/ Password. If a 403 is returned redirect to the agent-login page with a hash
var log = new Log();
var username = request.getParameter("username");
var password = request.getParameter("password");
var ownership = request.getParameter("ownership");

var userAgent = request.getHeader("User-Agent");
var UAParser = require("/modules/ua-parser.min.js").UAParser;
var parser = new UAParser();
parser.setUA(userAgent);
parser.getResult();
var os = parser.getOS();
var platform = os.name;

var mdmProps = require('/config/mdm-props.js').config();
log.info(platform);
var authUrl;
if(platform == "iOS"){
    var authUrl = mdmProps.iOSConfigRoot + 'enrollment/authenticate';
} else if(platform == "Windows Phone"){
    var authUrl = mdmProps.windowsConfigRoot;
}
var xhr = new XMLHttpRequest();
xhr.open("POST", authUrl);
xhr.setRequestHeader("Content-Type", "application/json");
if(platform == "iOS"){
    xhr.send({"username": username, "password": password});
}else if(platform == "Windows Phone"){
    xhr.send({"credentials": {"username": username, "password": password}});
}
log.info(authUrl)    ;
log.info(xhr.status);
if (xhr.status == 200) {
    session.put("username", username);
    session.put("password", password);
    session.put("ownership", ownership);
    if (platform == "Windows Phone"){
        session.put("windows_binary_token", xhr.responseText);
    } else if(platform == "iOS") {
        var responseText = parse(xhr.responseText);
        session.put("iOS_challenge_token", responseText.challengeToken);
    }
    response.sendRedirect("/mdm/license-agent");
} else if (xhr.status == 403) {
    response.sendRedirect("/mdm/login-agent#auth-failed");
} else {
    response.sendRedirect("/mdm/login-agent#error");
}
%>